import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
	id 'java'
	id 'application'
	id 'org.beryx.jlink' version '2.24.1'
	id 'com.diffplug.spotless' version '6.5.0'
}

repositories {
	mavenCentral()
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

def currentOS = DefaultNativePlatform.currentOperatingSystem
def platform
if (currentOS.isWindows()) {
	platform = 'win'
} else if (currentOS.isLinux()) {
	platform = 'linux'
} else if (currentOS.isMacOsX()) {
	platform = 'mac'
}
def javaFxVersion = '17.0.2'

dependencies {
	//noinspection GradlePackageUpdate
	implementation "org.openjfx:javafx-base:${javaFxVersion}:${platform}"
	//noinspection GradlePackageUpdate
	implementation "org.openjfx:javafx-controls:${javaFxVersion}:${platform}"
	//noinspection GradlePackageUpdate
	implementation "org.openjfx:javafx-graphics:${javaFxVersion}:${platform}"
	//noinspection GradlePackageUpdate
	implementation "org.openjfx:javafx-fxml:${javaFxVersion}:${platform}"
	implementation 'com.google.code.gson:gson:2.10'
	implementation 'io.github.palexdev:materialfx:11.13.5'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation 'org.slf4j:slf4j-nop:2.0.3'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

application {
	mainModule = 'cowin'
	mainClass = 'cowin.CowinMain'
}

jlink {
	options = [
		'--strip-debug',
		'--compress',
		'2',
		'--no-header-files',
		'--no-man-pages'
	]
	launcher {
		name = 'app'
	}
}

jlinkZip {
	group = 'distribution'
}

spotless {
	java {
		importOrder()
		removeUnusedImports()
		googleJavaFormat()
	}
	groovyGradle {
		target '**/*.gradle'
		greclipse()
	}
	freshmark {
		target '**/*.md'
	}
	format 'xml', {
		target '**/*.fxml'
		eclipseWtp('xml')
	}
	format 'css', {
		target '**/*.css'
		prettier()
	}
}

task installPreCommitGitHook(type: Copy){
	from new File(rootProject.rootDir, 'scripts/pre-commit')
	into { new File(rootProject.rootDir, '.git/hooks')}
	fileMode 0775
}

build.dependsOn installPreCommitGitHook
